plugins {
	id "java-library"
	id "org.springframework.boot.deployed"
	id "org.springframework.boot.docker-test"
}

description = "Spring Boot Buildpack Platform"

dependencies {
	dockerTestImplementation(project(":spring-boot-project:spring-boot-tools:spring-boot-test-support-docker"))
	dockerTestImplementation("org.junit.jupiter:junit-jupiter")
	dockerTestRuntimeOnly("org.testcontainers:testcontainers")

	implementation("com.fasterxml.jackson.core:jackson-databind")
	implementation("com.fasterxml.jackson.module:jackson-module-parameter-names")
	implementation("net.java.dev.jna:jna-platform")
	implementation("org.apache.commons:commons-compress")
	implementation("org.apache.httpcomponents.client5:httpclient5")
	implementation("org.springframework:spring-core")
	implementation("org.tomlj:tomlj:1.0.0")

	testImplementation(project(":spring-boot-project:spring-boot-tools:spring-boot-test-support"))
	testImplementation("com.jayway.jsonpath:json-path")
	testImplementation("org.assertj:assertj-core")
	testImplementation("org.hamcrest:hamcrest")
	testImplementation("org.junit.jupiter:junit-jupiter")
	testImplementation("org.mockito:mockito-core")
	testImplementation("org.mockito:mockito-junit-jupiter")
	testImplementation("org.skyscreamer:jsonassert")
}

tasks.named("test", Test).configure {
	inputs.file(layout.projectDirectory.file("src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemCertificateParser.java"))
			.withPathSensitivity(PathSensitivity.RELATIVE)
	inputs.file(layout.projectDirectory.file("src/main/java/org/springframework/boot/buildpack/platform/docker/ssl/PemPrivateKeyParser.java"))
			.withPathSensitivity(PathSensitivity.RELATIVE)

	inputs.file(new File(project(":spring-boot-project:spring-boot").projectDir, "src/main/java/org/springframework/boot/ssl/pem/PemCertificateParser.java"))
			.withPathSensitivity(PathSensitivity.RELATIVE)
	inputs.file(new File(project(":spring-boot-project:spring-boot").projectDir, "src/main/java/org/springframework/boot/ssl/pem/PemPrivateKeyParser.java"))
			.withPathSensitivity(PathSensitivity.RELATIVE)
}

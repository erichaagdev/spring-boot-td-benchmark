plugins {
	id "base"
	id "org.jetbrains.kotlin.jvm" apply false // https://youtrack.jetbrains.com/issue/KT-30276
}

description = "Spring Boot Build"

defaultTasks 'build'

allprojects {
	group "org.springframework.boot"
}

subprojects {
	apply plugin: "org.springframework.boot.conventions"

	repositories {
		mavenCentral()
		spring.mavenRepositories()
		if (version.contains('-')) {
			maven { url "https://repo.spring.io/milestone" }
		}
		if (version.endsWith('-SNAPSHOT')) {
			maven { url "https://repo.spring.io/snapshot" }
		}
	}

	configurations.all {
		resolutionStrategy.cacheChangingModulesFor 0, "minutes"
	}

	tasks.withType(Test).configureEach {
		ignoreFailures = true
		def applyTd = System.getProperty("td.apply").toBoolean()
		if (applyTd) {
			develocity.testDistribution {
				enabled = true
				maxRemoteExecutors = System.getProperty("td.maxRemoteExecutors").toInteger()
				maxLocalExecutors = System.getProperty("td.maxLocalExecutors").toInteger()
				requirements = System.getProperty("td.requirements").tokenize(',')
				// Internal property
				server = uri(System.getProperty("td.server"))
			}
			systemProperty("org.springframework.boot.testsupport.TestResource.rewritePaths", "true")
		}
	}
}
